{"componentChunkName":"component---src-pages-installing-installing-md","path":"/installing/installing/","result":{"pageContext":{"frontmatter":{"title":"Installing ACD","excerpt":"Installing ACD.","categories":"installing","slug":"installing","toc":true},"relativePagePath":"/installing/installing.md","titleType":"page","MdxNode":{"id":"da721a2d-053e-5e8d-8945-0960d864e553","children":[],"parent":"2912d0e9-6347-59a2-8377-76081b9f6b7d","internal":{"content":"---\ntitle: \"Installing ACD\"\nexcerpt: \"Installing ACD.\"\ncategories: installing\nslug: installing\ntoc: true\n---\n_Note: Refer here for installation instructions for [IBM Watson Annotator for Clinical Data Container Edition](/installing/installing-ibm/)._\n\nTo install Annotator for Clinical Data Container Edition, you may use either the OpenShift Container Platform web console or the `oc` command line utility.\n\n## Overview\n\nAnnotator for Clinical Data Container Edition is an [operator-based](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/) release and uses a custom resource to define your ACD configuration.\n\nThe ACD operator uses the custom resource to deploy and manage the entire lifecycle of each ACD instance. Custom resources are presented as YAML configuration documents that define instances of the `Acd` custom resource type.\n\nA new instance of the `Acd` custom resource belonging to the `acd.merative.com` group must be installed. There is no upgrade path from the IBM Watson Annotator for Clinical Data Container Edition to Merative Annotator for Clinical Data Container Edition. Refer to the [Migration Considerations](/migration/considerations/) when planning for and migrating from an IBM Watson ACD instance to a Merative ACD instance.\n\nInstalling ACD has three phases:\n\n1. Install the Merative ACD operator catalog:  This will deploy the catalog from which the ACD operator can be installed.\n1. Install the ACD operator: This will deploy the operator that can be used to install and manage your ACD instances.\n1. Install one or more replicas of ACD by using the ACD operator.\n\n## Before you begin\n\n- [Plan for your installation](/planning/namespace/), such as preparing for persistent storage, considering security options, and planning for performance and capacity.\n- [Obtain your ACD registry credentials](https://www.ibm.com/support/pages/ibm-watson-health-product-support-portal) and [verify your access](/installing/installing/#verifying-acd-registry-access) to the ACD registry. Note that customers must use their customer ID to log in to their `Merative` account. The customer must request the credentials so the ownership and management of the ACD authorization stays with them.\n- Set up your environment according to the [prerequisites](/installing/prereqs/), including setting up your OpenShift Container Platform.\n- Obtain the connection details for your OpenShift Container Platform cluster from your administrator.\n- [Set up](/installing/setup-namespace/) your project and project dependencies if required for your environment.\n\n## Verifying ACD registry access\n\nA pull secret consists of a username and password used to authenticate the user with the container registry to ensure the user is entitled to pull images.\n\nBefore setting up the pull secret, verify your credentials can access the ACD registry. You should have Azure Active Directory (AAD) service principal credentials from your account onboarding process. See [authentication with the service principal](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-auth-service-principal#authenticate-with-the-service-principal) for guidance.\n\nExample (Docker with ACD registry credentials):\n\n```\ndocker login acdcontaineredition.azurecr.io --username <username> --password <password>\n```\n\n- where `<username>` is the service principal's application (client) ID\n- where `<password>` is the service principal's password (client secret)\n\n### ACD registry pull secret\n\nIn order for ACD images to be pulled from the ACD registry, a pull secret must be added to the environment. This can be set up using one of the following:\n\n1. Added to the OpenShift global pull secrets\n1. Added to the ACD operand service account\n\n#### Option 1: OpenShift global pull secret installation\n\nTo add the pull secret to the OpenShift global pull secret:\n\n1. Extract the current global image pull secret from the cluster into a file in the current directory named `.dockerconfigjson`\n\n   `oc extract secret/pull-secret --namespace openshift-config --to=.`\n\n1. Create a base64 encoded string with the ACD registry credentials, such as the service principal client ID (username) and client secret (password), as it aligns with your access method.\n\n   `printf \"<username>:<password>\" | base64`\n\n1. Edit the `.dockerconfigjson` file and **ADD** a new JSON object to the existing auths object with the credentials for the ACD registry. For example:\n\n   ```\n   \"acdcontaineredition.azurecr.io\": {\n       \"auth\": \"YjM3ODBhpaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmljVTk==\",\n       \"email\": \"xxx@nomail.relay.merative.com\"\n   }\n   ```\n\n1. Update the global image pull secret with the updated credentials:\n\n   `oc set data secret/pull-secret --namespace openshift-config --from-file=.dockerconfigjson`\n\n1. Monitor the node status using the command:\n\n   `oc get nodes`\n\n1. When the nodes are finished restarting, your cluster is now ready to pull images from the ACD registry.\n\nFor more information on OpenShift pull secrets, refer to [Using image pull secrets](https://docs.openshift.com/container-platform/4.7/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\n\n#### Option 2: Service account pull secret installation\n\nTo add the pull secret to individual ACD operand service accounts:\n\n1. Create a secret\n\n   ```\n   kubectl create secret docker-registry acd-registry-credentials \\\n       --docker-server=acdcontaineredition.azurecr.io \\\n       --docker-username=<username> \\\n       --docker-password=<password> \\\n       --docker-email=<email_address> \\\n       --namespace=<namespace>\n   ```\n\n   - `<username>` is the service principal's application (client) ID\n   - `<password>` is the service principal's password (client secret)\n\n1. After the ACD operand has been installed, the service account must be patched to point to the secret.\n\n  NOTE: If using the current release of the ACD Container Edition, this `acd-registry-credentials` pull secret is already defined in the operand service account so the patch step is no longer necessary.\n\n   ```\n   kubectl patch serviceaccount merative-acd-operand \\\n       --namespace <namespace> \\\n       --patch '{\"imagePullSecrets\": [{\"name\": \"acd-registry-credentials\"}]}'\n   ```\n\n1. Then the ACD operand pods must be restarted\n\n   ```\n   kubectl delete pods \\\n       --namespace <namespace> \\\n       --all\n   ```\n\n## Installing the Merative ACD operator catalog\n\nBefore you can install the ACD operator and use it to create instances of the ACD service, you must have a catalog source which includes ACD. ACD is available with the ACD operator catalog.\n\nTo add the ACD operator catalog:\n\n1. Create a file for the ACD operator catalog source with the following content, and save as `ACDCatalogSource.yaml`:\n\n   ```yaml ACDCatalogSource.yaml\n   apiVersion: operators.coreos.com/v1alpha1\n   kind: CatalogSource\n   metadata:\n      name: merative-acd-operator-catalog\n      namespace: openshift-marketplace\n   spec:\n      displayName: \"ACD Operator Catalog\"\n      publisher: Merative\n      sourceType: grpc\n      image: acdcontaineredition.azurecr.io/acd-ce/merative-acd-operator-catalog:latest\n      updateStrategy:\n        registryPoll:\n          interval: 45m\n   ```\n\n1. Log in to your Red Hat OpenShift Container Platform as a cluster administrator by using the `oc` CLI.\n\n1. Apply the source by using the following command:\n\n   `oc apply -f ACDCatalogSource.yaml`\n\nThe ACD operator catalog source is added to the OperatorHub catalog, making the ACD operator available to install.\n\n## Installing the ACD operator\n\n### Install the ACD operator using the web console\n\nTo install the ACD operator through the OpenShift Container Platform web console, do the following:\n\n1. Log in to the OpenShift Container Platform [web console](https://docs.openshift.com/container-platform/4.7/web_console/web-console.html) using your login credentials.\n1. Expand the **Operators** dropdown and select **OperatorHub** to open the **OperatorHub** dashboard.\n1. Select the project you want to use as the target namespace for your ACD deployment.\n1. In the **All Items** search box enter `ACD` to locate the operator title.\n1. Click the **ACD** tile to open the install side panel.\n1. Click the **Install** button to open the **Create Operator Subscription** dashboard.\n1. Select the chosen installation mode that suits your requirements. If the installation mode is **A specific namespace on the cluster**, select the target namespace you created previously.\n1. Select the approval strategy that suits your requirements. If set to **Automatic**, the [Subscription](https://docs.openshift.com/container-platform/4.7/operators/understanding/olm/olm-understanding-olm.html#olm-subscription_olm-understanding-olm) resource uses [Operator Lifecycle Manager (OLM)](https://docs.openshift.com/container-platform/4.7/operators/understanding/olm/olm-understanding-olm.html#olm-overview_olm-understanding-olm) to manage and upgrade the operator to ensure that the latest version is always running in the cluster. With **Manual** approval set, a project administrator must manually approve the install plan to enable the upgrade. See the [upgrading](../../installing/upgrading) section for more details.\n1. Click **Install** to begin the installation.\n\nThe installation can take a few minutes to complete.\n\n## Installing the ACD service\n\nInstances of ACD can be created after the ACD operator is installed.\n\nIf the ACD operator was installed into a specific namespace, then it can only be used to manage instances of ACD in that namespace.\n\nIf the ACD operator was installed for all namespaces, then it can be used to manage instances of ACD in any namespace, including those created after the ACD operator was deployed.\n\nWhen installing an instance of ACD, ensure you are using a namespace that an ACD operator is managing.\n\n### Install the ACD service by using the web console\n\nTo install the ACD service through the OpenShift Container Platform web console, do the following:\n\n1. Log in to the OpenShift Container Platform [web console](https://docs.openshift.com/container-platform/4.7/web_console/web-console.html) using your login credentials.\n1. Expand the **Operators** dropdown and select **Installed Operators** to open the **Installed Operators** page.\n1. Expand the **Project** dropdown and select the project the operator is installed in. Select the **Annotator for Clinical Data** operator link in the **Name** column. If the operator is not shown, it is either not installed or not available for the selected namespace.\n1. In the **Operator Details** dashboard, click the **Annotator for Clinical Data** tab.\n1. Click the **Create Acd** button to open the **Create Acd** panel. You can use this panel to define an `Acd` custom resource.\n    - From here, you can install by using the [Form view](/management/configuring/#form-view). For more advanced configurations or to install an instance using default configuration, see installing by using the [YAML view](/management/configuring/#yaml-view).\n","type":"Mdx","contentDigest":"96e9a257a8a419f69aabf777cc74de98","owner":"gatsby-plugin-mdx","counter":224},"frontmatter":{"title":"Installing ACD","excerpt":"Installing ACD.","categories":"installing","slug":"installing","toc":true},"excerpt":"Installing ACD.","exports":{},"rawBody":"---\ntitle: \"Installing ACD\"\nexcerpt: \"Installing ACD.\"\ncategories: installing\nslug: installing\ntoc: true\n---\n_Note: Refer here for installation instructions for [IBM Watson Annotator for Clinical Data Container Edition](/installing/installing-ibm/)._\n\nTo install Annotator for Clinical Data Container Edition, you may use either the OpenShift Container Platform web console or the `oc` command line utility.\n\n## Overview\n\nAnnotator for Clinical Data Container Edition is an [operator-based](https://kubernetes.io/docs/concepts/extend-kubernetes/operator/) release and uses a custom resource to define your ACD configuration.\n\nThe ACD operator uses the custom resource to deploy and manage the entire lifecycle of each ACD instance. Custom resources are presented as YAML configuration documents that define instances of the `Acd` custom resource type.\n\nA new instance of the `Acd` custom resource belonging to the `acd.merative.com` group must be installed. There is no upgrade path from the IBM Watson Annotator for Clinical Data Container Edition to Merative Annotator for Clinical Data Container Edition. Refer to the [Migration Considerations](/migration/considerations/) when planning for and migrating from an IBM Watson ACD instance to a Merative ACD instance.\n\nInstalling ACD has three phases:\n\n1. Install the Merative ACD operator catalog:  This will deploy the catalog from which the ACD operator can be installed.\n1. Install the ACD operator: This will deploy the operator that can be used to install and manage your ACD instances.\n1. Install one or more replicas of ACD by using the ACD operator.\n\n## Before you begin\n\n- [Plan for your installation](/planning/namespace/), such as preparing for persistent storage, considering security options, and planning for performance and capacity.\n- [Obtain your ACD registry credentials](https://www.ibm.com/support/pages/ibm-watson-health-product-support-portal) and [verify your access](/installing/installing/#verifying-acd-registry-access) to the ACD registry. Note that customers must use their customer ID to log in to their `Merative` account. The customer must request the credentials so the ownership and management of the ACD authorization stays with them.\n- Set up your environment according to the [prerequisites](/installing/prereqs/), including setting up your OpenShift Container Platform.\n- Obtain the connection details for your OpenShift Container Platform cluster from your administrator.\n- [Set up](/installing/setup-namespace/) your project and project dependencies if required for your environment.\n\n## Verifying ACD registry access\n\nA pull secret consists of a username and password used to authenticate the user with the container registry to ensure the user is entitled to pull images.\n\nBefore setting up the pull secret, verify your credentials can access the ACD registry. You should have Azure Active Directory (AAD) service principal credentials from your account onboarding process. See [authentication with the service principal](https://learn.microsoft.com/en-us/azure/container-registry/container-registry-auth-service-principal#authenticate-with-the-service-principal) for guidance.\n\nExample (Docker with ACD registry credentials):\n\n```\ndocker login acdcontaineredition.azurecr.io --username <username> --password <password>\n```\n\n- where `<username>` is the service principal's application (client) ID\n- where `<password>` is the service principal's password (client secret)\n\n### ACD registry pull secret\n\nIn order for ACD images to be pulled from the ACD registry, a pull secret must be added to the environment. This can be set up using one of the following:\n\n1. Added to the OpenShift global pull secrets\n1. Added to the ACD operand service account\n\n#### Option 1: OpenShift global pull secret installation\n\nTo add the pull secret to the OpenShift global pull secret:\n\n1. Extract the current global image pull secret from the cluster into a file in the current directory named `.dockerconfigjson`\n\n   `oc extract secret/pull-secret --namespace openshift-config --to=.`\n\n1. Create a base64 encoded string with the ACD registry credentials, such as the service principal client ID (username) and client secret (password), as it aligns with your access method.\n\n   `printf \"<username>:<password>\" | base64`\n\n1. Edit the `.dockerconfigjson` file and **ADD** a new JSON object to the existing auths object with the credentials for the ACD registry. For example:\n\n   ```\n   \"acdcontaineredition.azurecr.io\": {\n       \"auth\": \"YjM3ODBhpaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxmljVTk==\",\n       \"email\": \"xxx@nomail.relay.merative.com\"\n   }\n   ```\n\n1. Update the global image pull secret with the updated credentials:\n\n   `oc set data secret/pull-secret --namespace openshift-config --from-file=.dockerconfigjson`\n\n1. Monitor the node status using the command:\n\n   `oc get nodes`\n\n1. When the nodes are finished restarting, your cluster is now ready to pull images from the ACD registry.\n\nFor more information on OpenShift pull secrets, refer to [Using image pull secrets](https://docs.openshift.com/container-platform/4.7/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets).\n\n#### Option 2: Service account pull secret installation\n\nTo add the pull secret to individual ACD operand service accounts:\n\n1. Create a secret\n\n   ```\n   kubectl create secret docker-registry acd-registry-credentials \\\n       --docker-server=acdcontaineredition.azurecr.io \\\n       --docker-username=<username> \\\n       --docker-password=<password> \\\n       --docker-email=<email_address> \\\n       --namespace=<namespace>\n   ```\n\n   - `<username>` is the service principal's application (client) ID\n   - `<password>` is the service principal's password (client secret)\n\n1. After the ACD operand has been installed, the service account must be patched to point to the secret.\n\n  NOTE: If using the current release of the ACD Container Edition, this `acd-registry-credentials` pull secret is already defined in the operand service account so the patch step is no longer necessary.\n\n   ```\n   kubectl patch serviceaccount merative-acd-operand \\\n       --namespace <namespace> \\\n       --patch '{\"imagePullSecrets\": [{\"name\": \"acd-registry-credentials\"}]}'\n   ```\n\n1. Then the ACD operand pods must be restarted\n\n   ```\n   kubectl delete pods \\\n       --namespace <namespace> \\\n       --all\n   ```\n\n## Installing the Merative ACD operator catalog\n\nBefore you can install the ACD operator and use it to create instances of the ACD service, you must have a catalog source which includes ACD. ACD is available with the ACD operator catalog.\n\nTo add the ACD operator catalog:\n\n1. Create a file for the ACD operator catalog source with the following content, and save as `ACDCatalogSource.yaml`:\n\n   ```yaml ACDCatalogSource.yaml\n   apiVersion: operators.coreos.com/v1alpha1\n   kind: CatalogSource\n   metadata:\n      name: merative-acd-operator-catalog\n      namespace: openshift-marketplace\n   spec:\n      displayName: \"ACD Operator Catalog\"\n      publisher: Merative\n      sourceType: grpc\n      image: acdcontaineredition.azurecr.io/acd-ce/merative-acd-operator-catalog:latest\n      updateStrategy:\n        registryPoll:\n          interval: 45m\n   ```\n\n1. Log in to your Red Hat OpenShift Container Platform as a cluster administrator by using the `oc` CLI.\n\n1. Apply the source by using the following command:\n\n   `oc apply -f ACDCatalogSource.yaml`\n\nThe ACD operator catalog source is added to the OperatorHub catalog, making the ACD operator available to install.\n\n## Installing the ACD operator\n\n### Install the ACD operator using the web console\n\nTo install the ACD operator through the OpenShift Container Platform web console, do the following:\n\n1. Log in to the OpenShift Container Platform [web console](https://docs.openshift.com/container-platform/4.7/web_console/web-console.html) using your login credentials.\n1. Expand the **Operators** dropdown and select **OperatorHub** to open the **OperatorHub** dashboard.\n1. Select the project you want to use as the target namespace for your ACD deployment.\n1. In the **All Items** search box enter `ACD` to locate the operator title.\n1. Click the **ACD** tile to open the install side panel.\n1. Click the **Install** button to open the **Create Operator Subscription** dashboard.\n1. Select the chosen installation mode that suits your requirements. If the installation mode is **A specific namespace on the cluster**, select the target namespace you created previously.\n1. Select the approval strategy that suits your requirements. If set to **Automatic**, the [Subscription](https://docs.openshift.com/container-platform/4.7/operators/understanding/olm/olm-understanding-olm.html#olm-subscription_olm-understanding-olm) resource uses [Operator Lifecycle Manager (OLM)](https://docs.openshift.com/container-platform/4.7/operators/understanding/olm/olm-understanding-olm.html#olm-overview_olm-understanding-olm) to manage and upgrade the operator to ensure that the latest version is always running in the cluster. With **Manual** approval set, a project administrator must manually approve the install plan to enable the upgrade. See the [upgrading](../../installing/upgrading) section for more details.\n1. Click **Install** to begin the installation.\n\nThe installation can take a few minutes to complete.\n\n## Installing the ACD service\n\nInstances of ACD can be created after the ACD operator is installed.\n\nIf the ACD operator was installed into a specific namespace, then it can only be used to manage instances of ACD in that namespace.\n\nIf the ACD operator was installed for all namespaces, then it can be used to manage instances of ACD in any namespace, including those created after the ACD operator was deployed.\n\nWhen installing an instance of ACD, ensure you are using a namespace that an ACD operator is managing.\n\n### Install the ACD service by using the web console\n\nTo install the ACD service through the OpenShift Container Platform web console, do the following:\n\n1. Log in to the OpenShift Container Platform [web console](https://docs.openshift.com/container-platform/4.7/web_console/web-console.html) using your login credentials.\n1. Expand the **Operators** dropdown and select **Installed Operators** to open the **Installed Operators** page.\n1. Expand the **Project** dropdown and select the project the operator is installed in. Select the **Annotator for Clinical Data** operator link in the **Name** column. If the operator is not shown, it is either not installed or not available for the selected namespace.\n1. In the **Operator Details** dashboard, click the **Annotator for Clinical Data** tab.\n1. Click the **Create Acd** button to open the **Create Acd** panel. You can use this panel to define an `Acd` custom resource.\n    - From here, you can install by using the [Form view](/management/configuring/#form-view). For more advanced configurations or to install an instance using default configuration, see installing by using the [YAML view](/management/configuring/#yaml-view).\n","fileAbsolutePath":"/home/runner/work/acd-containers/acd-containers/src/pages/installing/installing.md"}}},"staticQueryHashes":["1364590287","137577622","2102389209","2456312558","2610115429","2746626797","3037994772","768070550"]}