{"version":3,"file":"component---src-pages-installing-installing-ibm-md-92e7f41b59ceebfac745.js","mappings":"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","sources":["webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://acd-containers/./src/pages/installing/installing-ibm.md"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/acd-containers/acd-containers/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p><em parentName=\"p\">{`Note: The following instructions are for installing IBM Watson Annotator for Clinical Data Container Edition.  For installation instructions for Merative Annotator for Clinical Data Container Edition, please refer `}<a parentName=\"em\" {...{\n          \"href\": \"/acd-containers/installing/installing/\"\n        }}>{`here`}</a>{`.`}</em></p>\n    <p>{`To install IBM Watson Annotator for Clinical Data Container Edition, you may use either the OpenShift Container Platform web console, the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.openshift.com/container-platform/4.11/welcome/index.html\"\n      }}>{`oc`}</a>{` command line utility, or the `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/cloud-pak-cli\"\n      }}>{`cloudctl`}</a>{` command line utility.`}</p>\n    <h2>{`Overview`}</h2>\n    <p>{`Annotator for Clinical Data Container Edition is an `}<a parentName=\"p\" {...{\n        \"href\": \"https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\"\n      }}>{`operator-based`}</a>{` release and uses a custom resource to define your ACD configuration.`}</p>\n    <p>{`The ACD operator uses the custom resource to deploy and manage the entire lifecycle of each ACD instance. Custom resources are presented as YAML configuration documents that define instances of the `}<inlineCode parentName=\"p\">{`Acd`}</inlineCode>{` custom resource type.`}</p>\n    <p>{`Installing ACD has three phases:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Install the IBM operator catalog:  This will deploy the catalog from which IBM operators, including ACD, can be installed.`}</li>\n      <li parentName=\"ol\">{`Install the ACD operator:  This will deploy the operator that can be used to install and manage your ACD instances.`}</li>\n      <li parentName=\"ol\">{`Install one or more replicas of ACD by using the ACD operator.`}</li>\n    </ol>\n    <h2>{`Before you begin`}</h2>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/planning/namespace/\"\n        }}>{`Plan for your installation`}</a>{`, such as preparing for persistent storage, considering security options, and planning for performance and capacity.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://myibm.ibm.com/products-services/containerlibrary\"\n        }}>{`Obtain an entitlement key`}</a>{` and `}<a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/installing/installing-ibm/#verifying-ibm-entitled-registry-access\"\n        }}>{`verify registry access`}</a>{` to the IBM Entitled Registry. Note that customers must use their IBMid to log in to their `}<inlineCode parentName=\"li\">{`myibm`}</inlineCode>{` account. The customer must request the entitlement key so the ownership and management of the entitlement stays with them.`}</li>\n      <li parentName=\"ul\">{`Set up your environment according to the `}<a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/installing/prereqs/\"\n        }}>{`prerequisites`}</a>{`, including setting up your OpenShift Container Platform.`}</li>\n      <li parentName=\"ul\">{`Obtain the connection details for your OpenShift Container Platform cluster from your administrator.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/installing/setup-namespace/\"\n        }}>{`Set up`}</a>{` your project and project dependencies if required for your environment. If using the CLI to install the ACD operator and ACD service, you will need the `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/cloud-pak-cli\"\n        }}>{`cloudctl`}</a>{` command line utility.`}</li>\n    </ul>\n    <h2>{`Verifying IBM Entitled Registry access`}</h2>\n    <p>{`A pull secret consists of a username and password used to authenticate the user with the container registry to ensure the user is entitled to pull images. When an entitlement key is obtained from `}<inlineCode parentName=\"p\">{`myibm`}</inlineCode>{`, the username should be `}<inlineCode parentName=\"p\">{`cp`}</inlineCode>{` and the password should be the entitlement key.`}</p>\n    <p>{`Before setting up the pull secret, verify the entitlement key can access the entitled registry.`}</p>\n    <p>{`Example (Docker with IBM Entitled Registry entitlement key):`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker login cp.icr.io --username cp --password <your entitlement key>\n`}</code></pre>\n    <h2>{`Air-gapped (disconnected) installation`}</h2>\n    <p>{`Some environments are disconnected and do not have access to the public internet, and therefore no access to DockerHub or other image registries. When deploying in an air-gapped environment, refer to the `}<a parentName=\"p\" {...{\n        \"href\": \"/acd-containers/installing/air-gap-installation/\"\n      }}>{`Air-gap Installation`}</a>{`.`}</p>\n    <h2>{`Non air-gapped (connected) installation`}</h2>\n    <p>{`When deploying in a non air-gapped or connected environment, continue with the following installation. These installation steps require internet access to pull images from the image registries.`}</p>\n    <h3>{`IBM Entitled Registry pull secret`}</h3>\n    <p>{`In order for ACD images to be pulled from the IBM Entitled Registry, a pull secret must be added to the environment. This can be set up using one of the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Added to the OpenShift global pull secrets`}</li>\n      <li parentName=\"ol\">{`Added to the ACD operand service account`}</li>\n    </ol>\n    <h4>{`Option 1: OpenShift global pull secret installation`}</h4>\n    <p>{`To add the pull secret to the OpenShift global pull secret:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Extract the current global image pull secret from the cluster into a file in the current directory named `}<inlineCode parentName=\"p\">{`.dockerconfigjson`}</inlineCode>{`:`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`oc extract secret/pull-secret --namespace openshift-config --to=.`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a base64 encoded string with the registry userid and password as it aligns with your access method.`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`printf \"cp:<acd registry key>\" | base64`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Edit the `}<inlineCode parentName=\"p\">{`.dockerconfigjson`}</inlineCode>{` file and `}<strong parentName=\"p\">{`ADD`}</strong>{` a new JSON object to the existing auths object with the credentials for the IBM Entitled Registry. For example:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`\"cp.icr.io\": {\n    \"auth\": \"aWFtYXBpaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxcGFzc3dvcmQ=\",\n    \"email\": \"xxx@nomail.relay.ibm.com\"\n}\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Update the global image pull secret with the updated credentials:`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`oc set data secret/pull-secret --namespace openshift-config --from-file=.dockerconfigjson`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Monitor the node status using the command:`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`oc get nodes`}</inlineCode></p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`When the nodes are finished restarting, your cluster is now ready to pull images from the registry.`}</p>\n      </li>\n    </ol>\n    <p>{`For more information on OpenShift pull secrets, refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.openshift.com/container-platform/4.7/openshift_images/managing_images/using-image-pull-secrets.html#images-update-global-pull-secret_using-image-pull-secrets\"\n      }}>{`Using image pull secrets`}</a>{`.`}</p>\n    <h4>{`Option 2: Service account pull secret installation`}</h4>\n    <p>{`To add the pull secret to individual ACD operand service accounts:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a secret`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl create secret docker-registry ibm-entitlement-key \\\\\n    --docker-server=cp.icr.io \\\\\n    --docker-username=<username> \\\\\n    --docker-password=<password> \\\\\n    --docker-email=<email_address> \\\\\n    --namespace=<namespace>\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<username>`}</inlineCode>{` is the username for the entitled registry. This should be `}<inlineCode parentName=\"li\">{`cp`}</inlineCode>{` when using a `}<inlineCode parentName=\"li\">{`myibm`}</inlineCode>{` entitlement key.`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`<password>`}</inlineCode>{` is the password for the entitled registry. This should be the entitlement key from `}<inlineCode parentName=\"li\">{`myibm`}</inlineCode>{`.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`After the ACD operand has been installed, the service account must be patched to point to the secret.`}</p>\n        <p parentName=\"li\">{`NOTE: If using the current release of the ACD Container Edition, this `}<inlineCode parentName=\"p\">{`ibm-entitlement-key`}</inlineCode>{` pull secret is already defined in the operand service account so the patch step is no longer necessary.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl patch serviceaccount ibm-wh-acd-operand \\\\\n    --namespace <namespace> \\\\\n    --patch '{\"imagePullSecrets\": [{\"name\": \"ibm-entitlement-key\"}]}'\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Then the ACD operand pods must be restarted`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{}}>{`kubectl delete pods \\\\\n    --namespace <namespace> \\\\\n    --all\n`}</code></pre>\n      </li>\n    </ol>\n    <h2>{`Installing the IBM operator catalog`}</h2>\n    <p>{`Before you can install the ACD operator and use it to create instances of the ACD service, you must have a catalog source which includes ACD. ACD is available with the IBM operator catalog.`}</p>\n    <p>{`If you have other IBM products installed in your cluster, then you may already have the IBM operator catalog available, and you can continue to installing the ACD operator from there.`}</p>\n    <p><strong parentName=\"p\">{`Important`}</strong>{`: If you operate in an internet-connected Red Hat OpenShift Container Platform cluster, you must migrate your images from Docker to the IBM Container Registry by 30 September 2021. IBM operator catalog related images can be sourced from `}<inlineCode parentName=\"p\">{`icr.io/cpopen`}</inlineCode>{`. Refer to `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.ibm.com/docs/en/cloud-paks/1.0?topic=clusters-migrating-from-docker-container-registry\"\n      }}>{`Migrating from Docker to IBM Container Registry`}</a>{` for more details.`}</p>\n    <p>{`To add the IBM operator catalog:`}</p>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Create a file for the IBM operator catalog source with the following content, and save as `}<inlineCode parentName=\"p\">{`IBMCatalogSource.yaml`}</inlineCode>{`:`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-yaml\",\n            \"metastring\": \"IBMCatalogSource.yaml\",\n            \"IBMCatalogSource.yaml\": true\n          }}>{`apiVersion: operators.coreos.com/v1alpha1\nkind: CatalogSource\nmetadata:\n   name: ibm-operator-catalog\n   namespace: openshift-marketplace\nspec:\n   displayName: \"IBM Operator Catalog\"\n   publisher: IBM\n   sourceType: grpc\n   image: icr.io/cpopen/ibm-operator-catalog\n   updateStrategy:\n     registryPoll:\n       interval: 45m\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Log in to your Red Hat OpenShift Container Platform as a cluster administrator by using the `}<inlineCode parentName=\"p\">{`oc`}</inlineCode>{` CLI.`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Apply the source by using the following command:`}</p>\n        <p parentName=\"li\"><inlineCode parentName=\"p\">{`oc apply -f IBMCatalogSource.yaml`}</inlineCode></p>\n      </li>\n    </ol>\n    <p>{`The IBM operator catalog source is added to the OperatorHub catalog, making the ACD operator available to install.`}</p>\n    <p>{`More information on the IBM operator catalog can be found at `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/IBM/cloud-pak/blob/master/reference/operator-catalog-enablement.md\"\n      }}>{`Red Hat Catalog Enablement for the IBM operator catalog`}</a></p>\n    <h2>{`Installing the ACD operator`}</h2>\n    <h3>{`Install the ACD operator using the web console`}</h3>\n    <p>{`To install the ACD operator through the OpenShift Container Platform web console, do the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Log in to the OpenShift Container Platform `}<a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.7/web_console/web-console.html\"\n        }}>{`web console`}</a>{` using your login credentials.`}</li>\n      <li parentName=\"ol\">{`Expand the `}<strong parentName=\"li\">{`Operators`}</strong>{` dropdown and select `}<strong parentName=\"li\">{`OperatorHub`}</strong>{` to open the `}<strong parentName=\"li\">{`OperatorHub`}</strong>{` dashboard.`}</li>\n      <li parentName=\"ol\">{`Select the project you want to use as the target namespace for your ACD deployment.`}</li>\n      <li parentName=\"ol\">{`In the `}<strong parentName=\"li\">{`All Items`}</strong>{` search box enter `}<inlineCode parentName=\"li\">{`ACD`}</inlineCode>{` to locate the operator title.`}</li>\n      <li parentName=\"ol\">{`Click the `}<strong parentName=\"li\">{`ACD`}</strong>{` tile to open the install side panel.`}</li>\n      <li parentName=\"ol\">{`Click the `}<strong parentName=\"li\">{`Install`}</strong>{` button to open the `}<strong parentName=\"li\">{`Create Operator Subscription`}</strong>{` dashboard.`}</li>\n      <li parentName=\"ol\">{`Select the chosen installation mode that suits your requirements. If the installation mode is `}<strong parentName=\"li\">{`A specific namespace on the cluster`}</strong>{`, select the target namespace you created previously.`}</li>\n      <li parentName=\"ol\">{`Select the approval strategy that suits your requirements. If set to `}<strong parentName=\"li\">{`Automatic`}</strong>{`, the `}<a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.7/operators/understanding/olm/olm-understanding-olm.html#olm-subscription_olm-understanding-olm\"\n        }}>{`Subscription`}</a>{` resource uses `}<a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.7/operators/understanding/olm/olm-understanding-olm.html#olm-overview_olm-understanding-olm\"\n        }}>{`Operator Lifecycle Manager (OLM)`}</a>{` to manage and upgrade the operator to ensure that the latest version is always running in the cluster. With `}<strong parentName=\"li\">{`Manual`}</strong>{` approval set, a project administrator must manually approve the install plan to enable the upgrade. See the `}<a parentName=\"li\" {...{\n          \"href\": \"../../installing/upgrading\"\n        }}>{`upgrading`}</a>{` section for more details.`}</li>\n      <li parentName=\"ol\">{`Click `}<strong parentName=\"li\">{`Install`}</strong>{` to begin the installation.`}</li>\n    </ol>\n    <p>{`The installation can take a few minutes to complete.`}</p>\n    <h3>{`Install the ACD operator using cloudctl`}</h3>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case case/ibm-wh-acd \\\\\n    --namespace <namespace> \\\\\n    --inventory clinicalDataAnnotatorOperatorSetup \\\\\n    --action installOperator \\\\\n    --tolerance 1\n`}</code></pre>\n    <h2>{`Installing the ACD service`}</h2>\n    <p>{`Instances of ACD can be created after the ACD operator is installed.`}</p>\n    <p>{`If the ACD operator was installed into a specific namespace, then it can only be used to manage instances of ACD in that namespace.`}</p>\n    <p>{`If the ACD operator was installed for all namespaces, then it can be used to manage instances of ACD in any namespace, including those created after the ACD operator was deployed.`}</p>\n    <p>{`When installing an instance of ACD, ensure you are using a namespace that an ACD operator is managing.`}</p>\n    <h3>{`Install the ACD service by using the web console`}</h3>\n    <p>{`To install the ACD service through the OpenShift Container Platform web console, do the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Log in to the OpenShift Container Platform `}<a parentName=\"li\" {...{\n          \"href\": \"https://docs.openshift.com/container-platform/4.7/web_console/web-console.html\"\n        }}>{`web console`}</a>{` using your login credentials.`}</li>\n      <li parentName=\"ol\">{`Expand the `}<strong parentName=\"li\">{`Operators`}</strong>{` dropdown and select `}<strong parentName=\"li\">{`Installed Operators`}</strong>{` to open the `}<strong parentName=\"li\">{`Installed Operators`}</strong>{` page.`}</li>\n      <li parentName=\"ol\">{`Expand the `}<strong parentName=\"li\">{`Project`}</strong>{` dropdown and select the project the operator is installed in. Select the `}<strong parentName=\"li\">{`Annotator for Clinical Data`}</strong>{` operator link in the `}<strong parentName=\"li\">{`Name`}</strong>{` column. If the operator is not shown, it is either not installed or not available for the selected namespace.`}</li>\n      <li parentName=\"ol\">{`In the `}<strong parentName=\"li\">{`Operator Details`}</strong>{` dashboard, click the `}<strong parentName=\"li\">{`Annotator for Clinical Data`}</strong>{` tab.`}</li>\n      <li parentName=\"ol\">{`Click the `}<strong parentName=\"li\">{`Create Acd`}</strong>{` button to open the `}<strong parentName=\"li\">{`Create Acd`}</strong>{` panel. You can use this panel to define an `}<inlineCode parentName=\"li\">{`Acd`}</inlineCode>{` custom resource.`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`From here, you can install by using the `}<a parentName=\"li\" {...{\n              \"href\": \"/acd-containers/management/configuring/#form-view\"\n            }}>{`Form view`}</a>{`. For more advanced configurations or to install an instance using default configuration, see installing by using the `}<a parentName=\"li\" {...{\n              \"href\": \"/acd-containers/management/configuring/#yaml-view\"\n            }}>{`YAML view`}</a>{`.`}</li>\n        </ul>\n      </li>\n    </ol>\n    <h3>{`Install the ACD service using cloudctl`}</h3>\n    <p>{`By default, this will deploy 3 replicas of ACD. Include `}<inlineCode parentName=\"p\">{`--args \"--replicas 1\"`}</inlineCode>{` to install a 1 replica ACD instance.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case case/ibm-wh-acd \\\\\n    --namespace <namespace> \\\\\n    --inventory clinicalDataAnnotatorOperator \\\\\n    --action applyCustomResources \\\\\n    --tolerance 1\n`}</code></pre>\n    <p>{`To install with object storage, the following parameters need to be added.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cloudctl case launch \\\\\n    --case case/ibm-wh-acd \\\\\n    --namespace <namespace> \\\\\n    --inventory clinicalDataAnnotatorOperator \\\\\n    --action applyCustomResources \\\\\n    --tolerance 1 \\\\\n    --args \"--backend cos --bucket <bucket> --endpointUrl <endpoint> --location <location>\"\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}