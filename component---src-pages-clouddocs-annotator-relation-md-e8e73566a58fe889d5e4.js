"use strict";(self.webpackChunkacd_containers=self.webpackChunkacd_containers||[]).push([[6670],{3624:function(e,t,n){n.d(t,{Z:function(){return v}});var a=n(7294),r=n(8650),i=n.n(r),l=n(1597),o=n(3383),s=n(2618),c=n(5900),d=n.n(c),m=function(e){var t,n=e.title,r=e.theme,i=e.tabs,l=void 0===i?[]:i;return a.createElement("div",{className:d()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=l.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===r,t))},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12"},a.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},n)))))},p=function(e){var t=e.relativePagePath,n=e.repository,r=(0,l.useStaticQuery)("1364590287").site.siteMetadata.repository,i=n||r,o=i.baseUrl,s=i.subDirectory,c=o+"/edit/"+i.branch+s+"/src/pages"+t;return o?a.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},a.createElement("div",{className:"bx--col"},a.createElement("a",{className:"EditLink-module--link--IDrl1",href:c},"Edit this page on GitHub"))):null},u=n(4703),h=n(1721),f=function(e){function t(){return e.apply(this,arguments)||this}return(0,h.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,n=e.tabs,r=e.slug,o=r.split("/").filter(Boolean).slice(-1)[0],s=n.map((function(e){var t,n=i()(e,{lower:!0,strict:!0}),s=n===o,c=new RegExp(o+"/?(#.*)?$"),m=r.replace(c,n);return a.createElement("li",{key:e,className:d()((t={},t["PageTabs-module--selected-item--aBB0K"]=s,t),"PageTabs-module--list-item--024o6")},a.createElement(l.Link,{className:"PageTabs-module--link--Kz-7R",to:""+m},e))}));return a.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},a.createElement("div",{className:"bx--grid"},a.createElement("div",{className:"bx--row"},a.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},a.createElement("nav",{"aria-label":t},a.createElement("ul",{className:"PageTabs-module--list--xLqxG"},s))))))},t}(a.Component),g=f,b=n(7296),k=n(5387),N=n(3732),y=function(e){var t=e.date,n=new Date(t);return t?a.createElement(N.X2,{className:"last-modified-date-module--row--XJoYQ"},a.createElement(N.sg,null,a.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",n.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},v=function(e){var t=e.pageContext,n=e.children,r=e.location,c=e.Title,d=t.frontmatter,h=void 0===d?{}:d,f=t.relativePagePath,N=t.titleType,v=h.tabs,E=h.title,w=h.theme,x=h.description,T=h.keywords,P=h.date,C=(0,k.Z)().interiorTheme,_=(0,l.useStaticQuery)("2456312558").site.pathPrefix,S=_?r.pathname.replace(_,""):r.pathname,D=v?S.split("/").filter(Boolean).slice(-1)[0]||i()(v[0],{lower:!0}):"",Z=w||C;return a.createElement(s.Z,{tabs:v,homepage:!1,theme:Z,pageTitle:E,pageDescription:x,pageKeywords:T,titleType:N},a.createElement(m,{title:c?a.createElement(c,null):E,label:"label",tabs:v,theme:Z}),v&&a.createElement(g,{title:E,slug:S,tabs:v,currentTab:D}),a.createElement(b.Z,{padded:!0},n,a.createElement(p,{relativePagePath:f}),a.createElement(y,{date:P})),a.createElement(u.Z,{pageContext:t,location:r,slug:S,tabs:v,currentTab:D}),a.createElement(o.Z,null))}},6473:function(e,t,n){n.r(t),n.d(t,{_frontmatter:function(){return o},default:function(){return d}});var a=n(3366),r=(n(7294),n(4983)),i=n(3624),l=["components"],o={},s={_frontmatter:o},c=i.Z;function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)(c,Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The relation annotator is intended to be used in conjunction with the ",(0,r.kt)("a",{"data-scroll":"",href:"wh-acd?topic=wh-acd-concept_detection#concept_detection"},"concept detection")," annotator to identify related concepts in unstructured text. The relationship annotator will identify concepts with a defined relationship in either UMLS or a custom ontology that exist with the same sentence."),(0,r.kt)("h2",null,"Configurations"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Configuration"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"relationship_configurations"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the relationship configurations that identify the relationships to detect.")))),(0,r.kt)("h3",null,"Annotation Types"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"relations")),(0,r.kt)("h3",null,"Relation"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Fields"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"type"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The type of relationship that exists between the concepts.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"source"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of the ontology that defines the relationship.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"nodes"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The nodes identifies the related concepts. Nodes includes an entity for each concept that was related. An identifier is provided in the ",(0,r.kt)("strong",{parentName:"td"},"uid")," field that can be link back to the concept.")))),(0,r.kt)("h3",null,"Sample Response"),(0,r.kt)("p",null,"Sample response from the relation annotator for the text: ",(0,r.kt)("inlineCode",{parentName:"p"},"She is taking ibuprofen to help with her pain.")),(0,r.kt)("p",null,"It references the concepts for ",(0,r.kt)("inlineCode",{parentName:"p"},"ibuprofen")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"pain")," as having both the ",(0,r.kt)("inlineCode",{parentName:"p"},"may_prevent")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"may_be_prevented_by")," relationship."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "unstructured": [\n    {\n      "text": "She is taking ibuprofen to help with her pain.",\n      "data": {\n        "concepts": [\n          {\n            "cui": "C0020740",\n            "preferredName": "Ibuprofen",\n            "semanticType": "orch",\n            "source": "umls",\n            "type": "umls.OrganicChemical",\n            "begin": 14,\n            "end": 23,\n            "coveredText": "ibuprofen",\n            "uid": 2\n          },\n          {\n            "cui": "C0030193",\n            "preferredName": "Pain",\n            "semanticType": "sosy",\n            "source": "umls",\n            "type": "umls.SignOrSymptom",\n            "begin": 41,\n            "end": 45,\n            "coveredText": "pain",\n            "uid": 3\n          }\n        ],\n        "relations": [\n          {\n            "source": "umls",\n            "nodes": [\n              {\n                "entity": {\n                  "uid": 2\n                }\n              },\n              {\n                "entity": {\n                  "uid": 3\n                }\n              }\n            ],\n            "type": "may_be_prevented_by"\n          },\n          {\n            "source": "umls",\n            "nodes": [\n              {\n                "entity": {\n                  "uid": 3\n                }\n              },\n              {\n                "entity": {\n                  "uid": 2\n                }\n              }\n            ],\n            "type": "may_prevent"\n          }\n        ]\n      }\n    }\n  ]\n}\n')))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-clouddocs-annotator-relation-md-e8e73566a58fe889d5e4.js.map