"use strict";(self.webpackChunkacd_containers=self.webpackChunkacd_containers||[]).push([[4412],{3624:function(e,t,a){a.d(t,{Z:function(){return v}});var n=a(7294),r=a(8650),l=a.n(r),i=a(1597),o=a(3383),s=a(2618),d=a(5900),p=a.n(d),m=function(e){var t,a=e.title,r=e.theme,l=e.tabs,i=void 0===l?[]:l;return n.createElement("div",{className:p()("PageHeader-module--page-header--NqfPe",(t={},t["PageHeader-module--with-tabs--vbQ-W"]=i.length,t["PageHeader-module--dark-mode--WCeH8"]="dark"===r,t))},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12"},n.createElement("h1",{id:"page-title",className:"PageHeader-module--text--Er2EO"},a)))))},c=function(e){var t=e.relativePagePath,a=e.repository,r=(0,i.useStaticQuery)("1364590287").site.siteMetadata.repository,l=a||r,o=l.baseUrl,s=l.subDirectory,d=o+"/edit/"+l.branch+s+"/src/pages"+t;return o?n.createElement("div",{className:"bx--row EditLink-module--row--BEmSX"},n.createElement("div",{className:"bx--col"},n.createElement("a",{className:"EditLink-module--link--IDrl1",href:d},"Edit this page on GitHub"))):null},u=a(4703),g=a(1721),h=function(e){function t(){return e.apply(this,arguments)||this}return(0,g.Z)(t,e),t.prototype.render=function(){var e=this.props,t=e.title,a=e.tabs,r=e.slug,o=r.split("/").filter(Boolean).slice(-1)[0],s=a.map((function(e){var t,a=l()(e,{lower:!0,strict:!0}),s=a===o,d=new RegExp(o+"/?(#.*)?$"),m=r.replace(d,a);return n.createElement("li",{key:e,className:p()((t={},t["PageTabs-module--selected-item--aBB0K"]=s,t),"PageTabs-module--list-item--024o6")},n.createElement(i.Link,{className:"PageTabs-module--link--Kz-7R",to:""+m},e))}));return n.createElement("div",{className:"PageTabs-module--tabs-container--Cdfzw"},n.createElement("div",{className:"bx--grid"},n.createElement("div",{className:"bx--row"},n.createElement("div",{className:"bx--col-lg-12 bx--col-no-gutter"},n.createElement("nav",{"aria-label":t},n.createElement("ul",{className:"PageTabs-module--list--xLqxG"},s))))))},t}(n.Component),f=h,k=a(7296),N=a(5387),b=a(3732),y=function(e){var t=e.date,a=new Date(t);return t?n.createElement(b.X2,{className:"last-modified-date-module--row--XJoYQ"},n.createElement(b.sg,null,n.createElement("div",{className:"last-modified-date-module--text--ogPQF"},"Page last updated: ",a.toLocaleDateString("en-GB",{day:"2-digit",year:"numeric",month:"long"})))):null},v=function(e){var t=e.pageContext,a=e.children,r=e.location,d=e.Title,p=t.frontmatter,g=void 0===p?{}:p,h=t.relativePagePath,b=t.titleType,v=g.tabs,T=g.title,x=g.theme,E=g.description,P=g.keywords,w=g.date,C=(0,N.Z)().interiorTheme,S=(0,i.useStaticQuery)("2456312558").site.pathPrefix,D=S?r.pathname.replace(S,""):r.pathname,Z=v?D.split("/").filter(Boolean).slice(-1)[0]||l()(v[0],{lower:!0}):"",q=x||C;return n.createElement(s.Z,{tabs:v,homepage:!1,theme:q,pageTitle:T,pageDescription:E,pageKeywords:P,titleType:b},n.createElement(m,{title:d?n.createElement(d,null):T,label:"label",tabs:v,theme:q}),v&&n.createElement(f,{title:T,slug:D,tabs:v,currentTab:Z}),n.createElement(k.Z,{padded:!0},a,n.createElement(c,{relativePagePath:h}),n.createElement(y,{date:w})),n.createElement(u.Z,{pageContext:t,location:r,slug:D,tabs:v,currentTab:Z}),n.createElement(o.Z,null))}},6868:function(e,t,a){a.r(t),a.d(t,{_frontmatter:function(){return o},default:function(){return p}});var n=a(3366),r=(a(7294),a(4983)),l=a(3624),i=["components"],o={},s={_frontmatter:o},d=l.Z;function p(e){var t=e.components,a=(0,n.Z)(e,i);return(0,r.kt)(d,Object.assign({},s,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The negation detection annotator identifies the spans of text that are the object of a negation and also identifies the text that triggered the negation. The annotator adds a ",(0,r.kt)("strong",{parentName:"p"},"negated")," field to annotations to indicate if the annotation is negated."),(0,r.kt)("h2",null,"Configurations"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Configuration"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Values"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"fully_covered"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true/false"),(0,r.kt)("td",{parentName:"tr",align:"left"},"When true ",(0,r.kt)("i",null,"(default)"),", an annotation must be fully covered by a negated span to be marked negated. If false, the annotation will be considered negated if any part of it overlaps with a negated span.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"remove_negated"),(0,r.kt)("td",{parentName:"tr",align:"left"},"true/false"),(0,r.kt)("td",{parentName:"tr",align:"left"},"When false ",(0,r.kt)("i",null,"(default)"),", an annotation will be kept although they are detected to be negated. If true, the negated annotation will be removed")))),(0,r.kt)("h3",null,"Annotation Types"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"NegatedSpan")),(0,r.kt)("h4",null,"NegatedSpan"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Feature"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"begin"),(0,r.kt)("td",{parentName:"tr",align:null},"The start position of the annotation as a character offset into the text. The smallest possible start position is 0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"end"),(0,r.kt)("td",{parentName:"tr",align:null},"The end position of the annotation as character offset into the text. The end position points at the first character after the annotation, such that end-begin equals the length of the coveredText.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"coveredText"),(0,r.kt)("td",{parentName:"tr",align:null},"The text covered by an annotation as a string.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"NegatedSpan")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"trigger"),(0,r.kt)("td",{parentName:"tr",align:null},"The text that triggered the negation. For example, in the text ",(0,r.kt)("q",null,"She denies pain"),", the trigger is ",(0,r.kt)("q",null,"denies"),".")))),(0,r.kt)("hr",null),(0,r.kt)("h4",null,"Trigger"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Feature"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"begin"),(0,r.kt)("td",{parentName:"tr",align:null},"The start position of the annotation as a character offset into the text. The smallest possible start position is 0.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"end"),(0,r.kt)("td",{parentName:"tr",align:null},"The end position of the annotation as character offset into the text. The end position points at the first character after the annotation, such that end-begin equals the length of the coveredText.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"coveredText"),(0,r.kt)("td",{parentName:"tr",align:null},"The text covered by an annotation as a string.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"trigger")))),(0,r.kt)("h2",null,"Sample Response"),(0,r.kt)("p",null,"Sample response from the negation annotator for the text: ",(0,r.kt)("inlineCode",{parentName:"p"},"The patient denies pain.")),(0,r.kt)("p",null,"In this example, the concepts for ",(0,r.kt)("inlineCode",{parentName:"p"},"pain")," was annotated with the ",(0,r.kt)("strong",{parentName:"p"},"negated")," field value of ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," to indicate it is negated."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "unstructured": [\n    {\n      "text": "The patient denies pain.",\n      "data": {\n        "concepts": [\n          {\n            "cui": "C0030705",\n            "preferredName": "Patients",\n            "semanticType": "podg",\n            "source": "umls",\n            "type": "umls.PatientOrDisabledGroup",\n            "begin": 4,\n            "end": 11,\n            "coveredText": "patient",\n            "negated": false\n          },\n          {\n            "cui": "C0332319",\n            "preferredName": "Denied (qualifier)",\n            "semanticType": "qlco",\n            "source": "umls",\n            "type": "umls.QualitativeConcept",\n            "begin": 12,\n            "end": 18,\n            "coveredText": "denies",\n            "negated": false\n          },\n          {\n            "cui": "C0030193",\n            "preferredName": "Pain",\n            "semanticType": "sosy",\n            "source": "umls",\n            "type": "umls.SignOrSymptom",\n            "begin": 19,\n            "end": 23,\n            "coveredText": "pain",\n            "negated": true\n          }\n        ],\n        "negatedSpans": [\n          {\n            "trigger": {\n              "begin": 12,\n              "end": 18,\n              "coveredText": "denies"\n            },\n            "type": "NegatedSpan",\n            "begin": 19,\n            "end": 23,\n            "coveredText": "pain"\n          }\n        ]\n      }\n    }\n  ]\n}\n')))}p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-clouddocs-annotator-negation-detection-md-0afe3571b8f3467de974.js.map