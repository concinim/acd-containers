{"version":3,"file":"component---src-pages-installing-prereqs-md-238e3d3e9bfb3170a88a.js","mappings":"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","sources":["webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack://acd-containers/./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack://acd-containers/./src/pages/installing/prereqs.md"],"sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport * as styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageHeader-module--bx--text-truncate--end--b8JtW\";\nexport var bxTextTruncateFront = \"PageHeader-module--bx--text-truncate--front--WwZFh\";\nexport var darkMode = \"PageHeader-module--dark-mode--WCeH8\";\nexport var pageHeader = \"PageHeader-module--page-header--NqfPe\";\nexport var text = \"PageHeader-module--text--Er2EO\";\nexport var withTabs = \"PageHeader-module--with-tabs--vbQ-W\";","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"EditLink-module--bx--text-truncate--end--uI0cF\";\nexport var bxTextTruncateFront = \"EditLink-module--bx--text-truncate--front--HxjcS\";\nexport var link = \"EditLink-module--link--IDrl1\";\nexport var row = \"EditLink-module--row--BEmSX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"PageTabs-module--bx--text-truncate--end--OC59x\";\nexport var bxTextTruncateFront = \"PageTabs-module--bx--text-truncate--front--5I6-L\";\nexport var link = \"PageTabs-module--link--Kz-7R\";\nexport var list = \"PageTabs-module--list--xLqxG\";\nexport var listItem = \"PageTabs-module--list-item--024o6\";\nexport var selectedItem = \"PageTabs-module--selected-item--aBB0K\";\nexport var tabsContainer = \"PageTabs-module--tabs-container--Cdfzw\";","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport * as styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","// extracted by mini-css-extract-plugin\nexport var bxTextTruncateEnd = \"last-modified-date-module--bx--text-truncate--end--QgCc7\";\nexport var bxTextTruncateFront = \"last-modified-date-module--bx--text-truncate--front--kel8a\";\nexport var row = \"last-modified-date-module--row--XJoYQ\";\nexport var text = \"last-modified-date-module--text--ogPQF\";","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/acd-containers/acd-containers/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Annotator for Clinical Data (ACD) Container Edition has the following prerequisites:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Red Hat OpenShift Container Platform (OCP) 4.7 or later`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Commencing with OpenShift Container Platform 4.8, Red Hat will denote all even numbered minor releases (e.g. 4.8, 4.10, 4.12) as Extended Update Support (EUS) releases. ACD will support the EUS releases. For more lifecycle policy information please see the `}<a parentName=\"li\" {...{\n              \"href\": \"https://www.ibm.com/support/pages/ibm-continuous-delivery-support-lifecycle-policy\"\n            }}>{`IBM Continuous Delivery Support Lifecycle Policy`}</a>{` (IBM CD), and the `}<a parentName=\"li\" {...{\n              \"href\": \"https://access.redhat.com/support/policy/updates/openshift\"\n            }}>{`Red Hat OpenShift Container Platform Life Cycle Policy`}</a>{`.`}</li>\n          <li parentName=\"ul\">{`NOTE: ACD has been tested and supports OCP on AWS. Red Hat OpenShift Service on AWS (ROSA) has not been tested and is not supported at this time.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Share storage for ACD configuration storage - This can be:`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`A persistent volume claim against a `}<a parentName=\"li\" {...{\n              \"href\": \"https://docs.openshift.com/container-platform/4.6/storage/understanding-persistent-storage.html#pv-access-modes_understanding-persistent-storage\"\n            }}>{`ReadWriteMany shared file system`}</a>\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`This is most often used with on-premise, cloud-based clusters based on VMWare or OpenStack with an NFS file system. If using a shared file system ensure it supports\npersistent volume claims of ReadWriteMany (RWX) access mode across all zones and nodes of the cluster.`}</li>\n            </ul>\n          </li>\n          <li parentName=\"ul\">{`An object bucket`}\n            <ul parentName=\"li\">\n              <li parentName=\"ul\">{`On IBM Cloud - IBM Cloud Object Storage (COS) with a Regional bucket in the same cloud region as the cluster using Standard Storage Class`}</li>\n              <li parentName=\"ul\">{`On AWS - S3 Bucket in the same region`}</li>\n            </ul>\n          </li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Command line tools`}\n        <ul parentName=\"li\">\n          <li parentName=\"ul\"><a parentName=\"li\" {...{\n              \"href\": \"https://docs.openshift.com/container-platform\"\n            }}>{`oc`}</a>{` - OpenShift CLI for interacting with the cluster`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ul\">{`Login credentials and other cluster connection details from your cluster administrator`}</li>\n      <li parentName=\"ul\">{`A `}<a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/installing/installing/#create-a-project-(namespace)\"\n        }}>{`dedicated OpenShift project (namespace)`}</a>{` per ACD deployment`}</li>\n      <li parentName=\"ul\">{`Purchased ACD registry credentials for pulling images from the ACD registry`}</li>\n      <li parentName=\"ul\">{`A secret for accessing a storage bucket, if `}<a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/planning/storage/\"\n        }}>{`planning to use an object storage bucket`}</a></li>\n    </ul>\n    <p>{`Obtain the connection details for your OpenShift Container Platform cluster from your administrator. For additional planning and installation details, see:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/planning/namespace\"\n        }}>{`Plan for your installation`}</a>{`, such as preparing for persistent storage, considering security options, and planning for performance and capacity.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/installing/installing/#overview\"\n        }}>{`Install ACD`}</a>{`, such as creating a namespace, creating secrets, `}<a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/installing/installing/#add-the-acd-operator-to-the-catalog\"\n        }}>{`installing the catalog`}</a>{`, `}<a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/installing/installing/#install-the-acd-operator\"\n        }}>{`installing the operator`}</a>{`, and `}<a parentName=\"li\" {...{\n          \"href\": \"/acd-containers/installing/installing/#install-the-acd-service\"\n        }}>{`installing the ACD service`}</a>{`.`}<br /></li>\n    </ul>\n    <h2>{`Resources required`}</h2>\n    <p>{`By default, an ACD installation requires the following minimum resources:`}</p>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Component`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Number of worker nodes`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`CPU/node`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Memory/node (G)`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`ACD`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`3`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`8 min (16 recommended )`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`64`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <p>{`For high availability, run 3 replicas of the ACD service on a minimum of 3 worker nodes that have 16 CPU/node and 64 GB of memory. For a development or test environment, 1 or 2 replicas can be configured and 8 CPU/node may be used.  `}</p>\n    <p>{`By default, the ACD pods may use all of the CPUs on a node. If needed, you can limit the ACD deployment CPU usage (see `}<a parentName=\"p\" {...{\n        \"href\": \"../../management/configuring\"\n      }}>{`Configuration`}</a>{`).`}</p>\n    <p>{`These are the requirements for ACD. The cluster itself has additional requirements for master, infrastructure and possible additional worker node for monitoring, logging and other components or applications being run. Please see the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.openshift.com/container-platform/4.7/scalability_and_performance/recommended-host-practices.html\"\n      }}>{`OpenShift recommended host practices`}</a>{` for guidance on adding infrastructure nodes and moving resources to those nodes.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"names":["title","theme","tabs","className","cx","length","id","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","Link","to","React","date","lastModified","Date","toLocaleDateString","day","year","month","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"sourceRoot":""}